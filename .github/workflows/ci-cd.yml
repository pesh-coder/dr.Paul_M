name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SECRET_KEY: test-secret-key
      DEBUG: "False"
      ALLOWED_HOSTS: "*"
      WAGTAILADMIN_BASE_URL: https://example.com
      # IMPORTANT: host is the service name `postgres`, not localhost
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/test_db

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node.js deps & build CSS
        run: |
          npm ci
          npm run build-css-prod

      - name: Wait for Postgres
        run: |
          python - <<'PY'
          import time, socket
          for _ in range(60):
              try:
                  with socket.create_connection(("postgres", 5432), timeout=2):
                      break
              except OSError:
                  time.sleep(1)
          else:
              raise SystemExit("Postgres never became available")
          PY

      - name: Migrate & collect static
        run: |
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      - name: Run tests
        run: python manage.py test

  build:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: dr-paul-mwambu:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to production
        run: echo "Trigger Render/your deploy here"
